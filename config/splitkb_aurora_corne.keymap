/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | L_N | SPC |   | ENT | L_S  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp LALT
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |  .  |      |
// | SHFT |     |     |     |     |     |   |     | LFT | DWN | RGT |     |      |
//                    | GUI |     | SPC |   | ENT | L_P | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8   &kp N9    &kp N0  &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp DOT &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT &kp DOWN &kp RIGHT &trans  &trans
                                        &kp LGUI     &trans       &kp SPACE      &kp RET  &mo 3    &kp LALT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI | L_P | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp DEL
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp NUHS &kp GRAVE
   &kp LSHFT &kp NUBS &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &mo 3    &kp SPACE   &kp RET   &trans    &kp LALT
                        >;
                };

                numpad_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |  7  |  8  |  9  | NLCK |      |
// |      |     |     |     |     |     |   |     |  4  |  5  |  6  |      |      |
// |      |     |     |     |     |     |   |  0  |  1  |  2  |  3  |      |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp TAB   &trans &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOL_UP   &kp CARET &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_NUM      &kp BSPC
   &kp LCTRL &trans &trans     &trans   &trans     &kp C_VOL_DN   &kp MINUS &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_PLUS     &kp KP_MINUS
   &kp LSHFT &trans &trans     &trans   &trans     &kp C_MUTE     &kp KP_N0 &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY &kp KP_DIVIDE
                               &kp LGUI &trans     &kp SPACE      &kp RET   &trans     &kp LALT
                        >;
                };
        };
};
